
.. _setup:
<<<<<<< HEAD

*****************************
Setup
*****************************
=======

*****************************
Setup
*****************************

To use this extension, you need to:

* place the terminology.py script somewhere
* edit the conf.py 

.. index::
   triple: find; terminology.py; location
   pair: place; terminology.py

Place terminology.py
============================

If you downloaded :download:`sve.zip <../zipped/ste.zip>`, you can unzip it and read this documentation on your system. You will find the terminlogy.py in /build/downloads/ folder. 

Otherwise you saved terminology.py using the method under :ref:`download`. 

You now need to decide where you want to place the terminology.py script on your system so that it is found you do a build. For example:

* in the same directory as the conf.py
* in a directory that you want to reference for multiple Sphinx projects
* with the Sphinx software or another location you know is already in system path

For this Sphinx site, we have placed terminology in our code and have included it in the site so you can look at the code and comments. This is shown in our conf.py. 

.. index::
   triple: example; Term A; B Term

Edit conf.py
=======================

If you downloaded our

You need to make three changes to conf.py:

* set the path to terminology.py
* add to extension list
* set include to true

.. index::
   : conf.py; path; extension

Set the path
--------------------

The default conf.py as of 2016 included a line ``# If extensions (or modules to document with autodoc) are in another directory,`` which is near the top of the script. It explains you should the path for the extension if it is not in a place it will be found. 

For example, we have the extension in the code folder of our documentation so we added the line::

   sys.path.insert(0,os.path.abspath('./code'))

Remember, the dot means the current folder. 

You can also give the full path in quotes, such as::

   sys.path.insert(0,"/home/user/ste/source/code")


.. index::
   : conf.py; list; extension

Extension list
--------------------

Search for ``extensions =`` and you'll find a list of extensions being used. Add terminology to the end of the list.

<<<<<<< HEAD
>>>>>>> 39d6ea7588e752f7702956e5182abd11a2564b68

Locate terminology.py
============================
=======
::

   extensions = [
       'sphinx.ext.autodoc',
       'sphinx.ext.doctest',
       'sphinx.ext.intersphinx',
       'sphinx.ext.todo',
       'sphinx.ext.viewcode',
       'terminology',
   ]
>>>>>>> d36a7ff6e978b6d2760f63e7e5eea6e8c65ef75a

You probably will not be using the same extensions as our example. The point is to add terminology to the end of the list.

.. index::
   : conf.py; include; extension

Set include
--------------------

Search ``todo_inc``. Add these lines below that line::

   # If true, 'terminology' and 'terminologylist' produce output, else they produce nothing.
   terminology_include_terminologys = True





<<<<<<< HEAD
Edit conf.py
=======================
=======
**********************
Optional changes
**********************

.. index:: 
   pair: hyperlink; change

Terminology list hyperlink
======================================

<<<<<<< HEAD
You can change the appearance of the hyperlink at ... ~~~
>>>>>>> 39d6ea7588e752f7702956e5182abd11a2564b68
=======
You can change the appearance of the hyperlink. In terminology.py the ``process_termx_nodes()`` function has ``description`` string. You can change the string to how what you desire for the hyperlink that takes you back to where the term was defined. 
>>>>>>> d36a7ff6e978b6d2760f63e7e5eea6e8c65ef75a


.. index::
   triple: word; count; term

.. _moreWords:

Changing number of words in the "term"
===========================================

<<<<<<< HEAD
   optional_arguments = 14

=======
The extension ships with the number of words in the term being a maximum of 15. You can change this by editing the extension, file terminology.py. Find this line::

   optional_arguments = 14

Then change the 14 to the number you desire. Remember, the count starts at 0, hence setting to 14 gives you up to 15 words in the term.

>>>>>>> 39d6ea7588e752f7702956e5182abd11a2564b68


